version: 0.2
env:
  variables:
    GOOS: "linux"
    S3_BUCKET: "harmony-server-bucket"
    PACKAGE: "github.com/mchozhang/harmony-server"
    GO114MODULE: "on"

    # unittest variables
    AWS_REGION: ap-southeast-2
    TABLE_NAME: harmony-server-levels

phases:
  install:
    commands:
      # AWS Codebuild Go images use /go for the $GOPATH so let's copy our
      # application source code into that directory structure.
      - mkdir -p "/go/src/$(dirname ${PACKAGE})"
      - ln -s "${CODEBUILD_SRC_DIR}" "/go/src/${PACKAGE}"
      # print all environment variables (handy for AWS CodeBuild logs)
      - env
      # install dependencies
      - go get ./...
  pre_build:
    commands:
      - echo 'prebuild phase'
      - go vet ./...

  build:
    commands:
      # Run unittests
      - go test -v ./handler

      # Build project using AWS SAM
      - go build -o bin/main handler/main.go

      # Use AWS SAM to package the application and upload to S3 bucket
      - sam package -t template.yml --s3-bucket $S3_BUCKET --output-template-file template-export.yml

      # deploy the stack of lambda function(this step should be conducted in next CI/CD stage)
      #  - sam deploy -t template-export.yml --stack-name harmony-server-stack --capabilities CAPABILITY_NAMED_IAM

artifacts:
  type: zip
  files:
    - main
    - template-export.yml
